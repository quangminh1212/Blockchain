23.Autosar Methodology

    . Phát Triển Cấp Hệ Thống
        . Cấp Hệ Thống: Bao gồm toàn bộ chức năng phần mềm của phương tiện, bất kể chúng sẽ được đặt ở ECU nào cuối cùng.
        . Giả Định Hệ Thống: Giả sử hệ thống chỉ có 5 thành phần phần mềm.

            . Phát Triển Tất Cả Các Thành Phần Phần Mềm
                . Các thành phần phần mềm giao tiếp với nhau thông qua các Cổng.
                . Kết nối chúng và thực hiện giao tiếp cùng nhau như một Virtual Function Bus (VFB).

            . Virtual Function Bus (VFB)
                . VFB: Tổng hợp tất cả các cơ chế giao tiếp và giao diện với phần mềm cơ bản do Autosar cung cấp ở mức độ trừu tượng.
                . Lợi Ích: Cho phép tích hợp ảo ở giai đoạn phát triển sớm.

            . Hoàn Thành Phát Triển Cấp Hệ Thống
                . Hoàn thành phát triển cấp hệ thống và tất cả các cấu hình liên quan đến phần cứng ECU cho hệ thống cụ thể.

            . Ánh Xạ Các Thành Phần Phần Mềm Tới Các ECU
                . Giả sử ánh xạ hai thành phần phần mềm đầu tiên tới ECU-1.
                . Ánh xạ các thành phần phần mềm còn lại tới ECU-2.

    . Cấp Chiết Xuất ECU (ECU Extract)
        . Chiết Xuất ECU
            . ECU Extract: Chỉ lấy thông tin cụ thể của ECU từ hệ thống.
            . Chạy chiết xuất ECU cho từng ECU một.

        . Đầu Ra Của ECU Extract
            . Flatview: Danh sách các thành phần phần mềm và các kết nối giao tiếp giữa chúng.
            . Flatmap: Thể hiện tất cả các giao diện và thành phần phần mềm cho ECU cụ thể, chủ yếu dùng cho hiệu chỉnh và đo lường.
            . EcuExtract: Chứa tín hiệu ECU, ánh xạ tín hiệu, ánh xạ thành phần phần mềm tới ECU, v.v.

    . Cấu Hình Cụ Thể ECU
        . Cấu Hình Hệ Điều Hành (OS Configuration)
            . Thực hiện cấu hình hệ điều hành cho ECU cụ thể.
            . Ánh xạ sự kiện tới các tác vụ OS.

        . Gán Thành Phần Phần Mềm Tới Các Lõi (Cores) hoặc Phân Vùng (Partitions)
            . Gán các thành phần đã phát triển tới các lõi hoặc phân vùng cụ thể trên cùng một ECU.

    . Tạo Lớp RTE Cho Mỗi ECU
        . Tạo Lớp RTE Cho ECU-1
            . Chuyển tất cả các cấu hình ARXML đã phát triển đến công cụ tạo RTE.
            . Công cụ tạo ra lớp RTE hoàn chỉnh cho ECU-1.

        . Lặp Lại Cho ECU-2
            . Thực hiện các bước tương tự cho ECU-2.
            . Tạo lớp RTE mới cho ECU-2.

        . Giao Tiếp Giữa Các ECU
            . Giao tiếp giữa các ECU được xử lý bởi RTE thông qua các kênh COM được cấu hình.

    . Tóm Tắt Phương Pháp Phát Triển Autosar
        . Phát Triển Cấp Hệ Thống: Phát triển phần mềm cho toàn bộ hệ thống và giao tiếp ở cấp hệ thống được thực hiện qua VFB.
        . Chiết Xuất ECU: Lấy các thành phần phần mềm cụ thể cho từng ECU.
        . Cấu Hình Cụ Thể ECU: Thực hiện cấu hình cụ thể cho từng ECU.
        . Tạo Lớp RTE: Tạo lớp RTE riêng cho từng ECU.

    . Ví Dụ Minh Họa

        // Cấu hình hệ thống
        SystemComponent {
            Component1 {
                Port: PP_Speed;
            }
            Component2 {
                Port: RP_Speed;
            }
            // Các thành phần khác...
        }

        // Gán các thành phần cho ECU
        ECU1 {
            Component1;
            Component3;
        }
        ECU2 {
            Component2;
            Component4;
            Component5;
        }

        // Chiết xuất ECU1
        ECU1_Extract {
            Flatview;
            Flatmap;
            EcuExtract;
        }

        // Chiết xuất ECU2
        ECU2_Extract {
            Flatview;
            Flatmap;
            EcuExtract;
        }

        // Tạo RTE cho ECU1
        RTE_Generator {
            Input: ECU1_Extract;
            Output: RTE_Layer_ECU1;
        }

        // Tạo RTE cho ECU2
        RTE_Generator {
            Input: ECU2_Extract;
            Output: RTE_Layer_ECU2;
        }
        . Qua quy trình này, bạn có thể thấy cách phát triển theo phương pháp Autosar từ cấp hệ thống đến cấp ECU, đảm bảo tính nhất quán và hiệu quả trong việc phát triển và tích hợp phần mềm.

23.Autosar Methodology (Example)

    . Yêu Cầu Hệ Thống
        . Yêu cầu: Cửa xe chỉ mở khóa khi tốc độ xe đạt 0 và sau khi cửa mở, đèn đỗ xe sẽ bật.

    . Thiết Kế Yêu Cầu
        . Các thành phần phần mềm hiện có
            . Đã có phần mềm tính toán tốc độ và điều khiển đèn đỗ xe.

        . Tạo thành phần phần mềm mới
            . Door Control Software Component: Quyết định khi nào mở khóa cửa và gửi lệnh bật đèn đỗ xe.
            . Port nhận dữ liệu tốc độ từ thành phần Engine Speed Control.
            . Port gửi lệnh bật đèn tới thành phần Light Control.

        . Phát triển cấp hệ thống
            . Thực hiện giao tiếp các thành phần thông qua VFB (Virtual Function Bus).

    . Ánh Xạ Các Thành Phần Tới Các ECU
        . Phân bổ các ECU hiện có
            . ECU động cơ: Chứa các thành phần điều khiển động cơ.
            . ECU đèn: Chứa các thành phần điều khiển đèn.

        . Ánh xạ thành phần mới
            . Door Control Component: Được ánh xạ tới Door ECU.

    . Cấp Chiết Xuất ECU (ECU Extract)
        . Tạo chiết xuất ECU
            . Công cụ chiết xuất ECU: Được cung cấp bởi các nhà cung cấp khác nhau.
            . Đầu vào bổ sung: Cấu hình ECU, cấu hình hệ thống, v.v.

        . Đầu ra chiết xuất ECU
            . ECU Extract: Tạo cho từng ECU cá nhân, chứa các thành phần phần mềm liên quan.

    . Cấu Hình Cụ Thể ECU
        . Cấu hình tác vụ và sự kiện
            . Ánh xạ sự kiện tới tác vụ (Event to Task Mapping): Ánh xạ các sự kiện từ thành phần phần mềm tới tác vụ OS.

        . Gán thành phần phần mềm tới lõi hoặc phân vùng
            . Thực hiện cấu hình cụ thể cho từng ECU.

        . Tạo Lớp RTE Cho Mỗi ECU
            . Tạo RTE cho ECU-1
                . Sử dụng công cụ tạo RTE để tạo lớp RTE từ cấu hình ARXML.

            . Tạo RTE cho ECU-2
                . Lặp lại các bước tương tự để tạo lớp RTE cho ECU-2.

    . Quản Lý Giao Tiếp Giữa Các ECU
        . Giao tiếp giữa các ECU
            . RTE xử lý giao tiếp giữa các thành phần phần mềm dù chúng được đặt trên các ECU khác nhau.

        . Ví dụ cụ thể
            . Door ECU: Nhận dữ liệu tốc độ từ Engine ECU thông qua RTE.
            . Lệnh bật đèn: RTE chuyển lệnh tới Light ECU.

    . Lợi Ích Của Autosar
        . Di chuyển thành phần phần mềm dễ dàng
            . Các thành phần phần mềm có thể tự do di chuyển tới bất kỳ ECU nào với ít nỗ lực phát triển.

        . Giao tiếp hệ thống:
            . RTE và phần mềm cơ bản xử lý giao tiếp, giảm can thiệp từ cấp thành phần ứng dụng.

        . So sánh với phần mềm không Autosar
            . Phần mềm không Autosar sẽ thiếu các tiện ích này, gây khó khăn lớn cho ngành công nghiệp ô tô.

    . Ví Dụ Minh Họa Cụ Thể

        // Phát triển cấp hệ thống
        SystemComponent {
            DoorControlComponent {
                Port: PP_UnlockCommand;
                Port: RP_SpeedData;
            }
            EngineSpeedControl {
                Port: PP_SpeedData;
            }
            LightControl {
                Port: RP_LightCommand;
            }
            // Các thành phần khác...
        }

        // Ánh xạ các thành phần cho ECU
        ECU1 {
            EngineSpeedControl;
        }
        ECU2 {
            LightControl;
        }
        ECU3 {
            DoorControlComponent;
        }

        // Chiết xuất ECU3
        ECU3_Extract {
            Flatview;
            Flatmap;
            EcuExtract;
        }

        // Tạo RTE cho ECU3
        RTE_Generator {
            Input: ECU3_Extract;
            Output: RTE_Layer_ECU3;
        }

    . Quy Trình Thực Hiện
        . Phát triển cấp hệ thống: Thiết kế và giao tiếp các thành phần phần mềm qua VFB.
        . Chiết xuất ECU: Lấy thông tin cụ thể cho từng ECU.
        . Cấu hình cụ thể ECU: Thực hiện cấu hình OS và ánh xạ sự kiện tới tác vụ.
        . Tạo lớp RTE: Tạo lớp RTE riêng cho từng ECU, quản lý giao tiếp giữa các ECU.

    . Qua ví dụ thực tế này, bạn có thể thấy quy trình phát triển theo phương pháp Autosar, từ yêu cầu hệ thống đến cấu hình cụ thể ECU, và cách lớp RTE quản lý giao tiếp và lập lịch cho các thành phần phần mềm.